<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-2.0.xsd">

    <transition name="getProductList">
        <parameter name="term"/>
        <parameter name="productFeatureIds"/>
        <parameter name="indexName"/>
        <parameter name="documentType"/>
        <actions>
            <set field="indexName" from="searchIndexName ?: 'mantle'"/>
            <set field="documentType" from="searchProductDocType ?: 'MantleProduct'"/>
            <!-- <log message="====== getProductList indexName=${indexName}, documentType=${documentType}, term=${term}"/> -->

            <entity-find-one entity-name="mantle.product.Product" value-field="product">
                <field-map field-name="productId" from="term"/></entity-find-one>

            <if condition="product"><then>
                <script>
                    def outList = [[value:product.productId, label:ec.resource.expand("ProductNameTemplate", "", product)]]
                    ec.web.sendJsonResponse(outList)
                </script>
            </then><else>
                <script><![CDATA[
                    StringBuilder termSb = new StringBuilder()
                    termSb.append(term).append('*')
                    if (productFeatureIds) {
                        termSb.append(' AND productFeatureId:(')
                        List productFeatureIdList = productFeatureIds.split(',')
                        for (int i = 0; i < productFeatureIdList.size(); i++) {
                            termSb.append(productFeatureIdList.get(i))
                            if (i < (productFeatureIdList.size() - 1)) termSb.append(' OR ')
                        }
                        termSb.append(')')
                    }
                    ]]></script>
                <service-call name="org.moqui.impl.EntityServices.search#DataDocuments" out-map="context"
                        in-map="[queryString:termSb.toString(), indexName:indexName, documentType:documentType]"/>
                <script>
                    def outList = []
                    for (def document in documentList)
                        outList.add([value:document._id, label:ec.resource.expand("ProductNameTemplate", "", [productName:document.name,productId:document._id,pseudoId:document.pseudoId])])
                    ec.web.sendJsonResponse(outList)
                </script>
            </else></if>
        </actions>
        <default-response type="none"/>
    </transition>

    <widgets>
    </widgets>
</screen>
